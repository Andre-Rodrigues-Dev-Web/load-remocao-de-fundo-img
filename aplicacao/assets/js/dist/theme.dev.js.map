{"version":3,"sources":["theme.js"],"names":["imageDataUrl","handleFile","event","file","target","files","previewImg","document","getElementById","loadingBar","loadingText","size","style","display","reader","FileReader","onload","e","result","src","setTimeout","readAsDataURL","removeBackground","alert","img","Image","canvas","createElement","ctx","getContext","width","height","drawImage","imageData","getImageData","data","i","length","putImageData","transparentImg","toDataURL"],"mappings":"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","sourcesContent":["let imageDataUrl = \"\"; // Armazenar o URL da imagem\r\n\r\nconst handleFile = (event) => {\r\n  const file = event.target.files[0];\r\n  const previewImg = document.getElementById(\"previewImg\");\r\n  const loadingBar = document.getElementById(\"loadingBar\");\r\n  const loadingText = document.getElementById(\"loadingText\");\r\n\r\n  if (file) {\r\n    if (file.size > 100 * 1024) {\r\n      // Verifica se o arquivo é maior que 100 KB\r\n      loadingBar.style.display = \"block\";\r\n      loadingText.style.display = \"block\";\r\n\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = function (e) {\r\n        imageDataUrl = e.target.result; // Armazenar o URL da imagem\r\n        previewImg.src = imageDataUrl;\r\n\r\n        // Exibir a barra de progresso por 10 segundos\r\n        setTimeout(() => {\r\n          loadingBar.style.display = \"none\";\r\n          loadingText.style.display = \"none\";\r\n        }, 10000); // 10 segundos\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      // Se o arquivo for menor ou igual a 100 KB, mostra a imagem diretamente\r\n      const reader = new FileReader();\r\n      reader.onload = function (e) {\r\n        imageDataUrl = e.target.result; // Armazenar o URL da imagem\r\n        previewImg.src = imageDataUrl;\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  }\r\n}\r\n\r\nconst removeBackground = () => {\r\n  if (!imageDataUrl) {\r\n    alert(\"Por favor, carregue uma imagem primeiro.\");\r\n    return;\r\n  }\r\n\r\n  const img = new Image();\r\n  img.src = imageDataUrl;\r\n\r\n  img.onload = function () {\r\n    const canvas = document.createElement(\"canvas\");\r\n    const ctx = canvas.getContext(\"2d\");\r\n    canvas.width = img.width;\r\n    canvas.height = img.height;\r\n    ctx.drawImage(img, 0, 0);\r\n\r\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n    const data = imageData.data;\r\n\r\n    // Remover o fundo (por exemplo, tornando a cor branca transparente)\r\n    for (let i = 0; i < data.length; i += 4) {\r\n      if (data[i] > 200 && data[i + 1] > 200 && data[i + 2] > 200) {\r\n        // Detecta cor branca\r\n        data[i + 3] = 0; // Alpha para 0 (transparente)\r\n      }\r\n    }\r\n\r\n    ctx.putImageData(imageData, 0, 0);\r\n\r\n    const transparentImg = canvas.toDataURL(\"image/png\");\r\n    document.getElementById(\"previewImg\").src = transparentImg;\r\n\r\n    // Esconder a barra de carregamento após processar a imagem\r\n    const loadingBar = document.getElementById(\"loadingBar\");\r\n    const loadingText = document.getElementById(\"loadingText\");\r\n    loadingBar.style.display = \"none\";\r\n    loadingText.style.display = \"none\";\r\n  };\r\n}\r\n"],"file":"theme.dev.js"}